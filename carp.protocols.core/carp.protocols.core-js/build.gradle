apply plugin: 'kotlin-platform-js'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.moowork.node'


sourceSets {
    main.kotlin.srcDirs += 'src/main'
    test.kotlin.srcDirs += 'src/test'
}

dependencies {
    expectedBy project(":carp.protocols.core:carp.protocols.core-common")

    compile project(path: ':carp.common', configuration: 'jsDefault')

    compile "org.jetbrains.kotlin:kotlin-stdlib-js"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$serializationVersion"

    testCompile project(path: ':carp.test', configuration: 'jsDefault')

    testCompile "org.jetbrains.kotlin:kotlin-test-js"
}

[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions {
        sourceMap = true
        sourceMapEmbedSources = "always"
        moduleKind = 'commonjs'
    }
}

task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

node {
    version = nodeVersion
    download = true
}

task installMocha(type: NpmTask) {
    args = ['install', 'mocha']
}

task runMocha(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules, installMocha]) {
    script = file('node_modules/mocha/bin/mocha')
    args = [compileTestKotlin2Js.outputFile]
}

test.dependsOn runMocha